/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControl__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "ERC1155Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Burnable__factory>;
    getContractFactory(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURI__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC1155Holder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Holder__factory>;
    getContractFactory(
      name: "ERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Burnable__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "CommonEventsAndErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CommonEventsAndErrors__factory>;
    getContractFactory(
      name: "SafeCast",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCast__factory>;
    getContractFactory(
      name: "TempleERC20Token",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TempleERC20Token__factory>;
    getContractFactory(
      name: "FakeERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FakeERC20__factory>;
    getContractFactory(
      name: "IElevatedAccess",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IElevatedAccess__factory>;
    getContractFactory(
      name: "IBaseSacrifice",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBaseSacrifice__factory>;
    getContractFactory(
      name: "IPartnerSacrifice",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPartnerSacrifice__factory>;
    getContractFactory(
      name: "ISacrifice",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISacrifice__factory>;
    getContractFactory(
      name: "IERC721A",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721A__factory>;
    getContractFactory(
      name: "INexusCommon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INexusCommon__factory>;
    getContractFactory(
      name: "IRelic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRelic__factory>;
    getContractFactory(
      name: "IShard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IShard__factory>;
    getContractFactory(
      name: "ITempleSacrifice",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITempleSacrifice__factory>;
    getContractFactory(
      name: "ElevatedAccess",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ElevatedAccess__factory>;
    getContractFactory(
      name: "BaseSacrifice",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseSacrifice__factory>;
    getContractFactory(
      name: "ERC721A__IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721A__IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC721ACustom",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721ACustom__factory>;
    getContractFactory(
      name: "NexusCommon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NexusCommon__factory>;
    getContractFactory(
      name: "PartnerZeroSacrifice",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PartnerZeroSacrifice__factory>;
    getContractFactory(
      name: "Relic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Relic__factory>;
    getContractFactory(
      name: "Shard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Shard__factory>;
    getContractFactory(
      name: "TempleSacrifice",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TempleSacrifice__factory>;

    getContractAt(
      name: "AccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "IAccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControl>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "ERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155>;
    getContractAt(
      name: "ERC1155Burnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Burnable>;
    getContractAt(
      name: "IERC1155MetadataURI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURI>;
    getContractAt(
      name: "IERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "ERC1155Holder",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Holder>;
    getContractAt(
      name: "ERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Receiver>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Burnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Burnable>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "CommonEventsAndErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CommonEventsAndErrors>;
    getContractAt(
      name: "SafeCast",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCast>;
    getContractAt(
      name: "TempleERC20Token",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TempleERC20Token>;
    getContractAt(
      name: "FakeERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FakeERC20>;
    getContractAt(
      name: "IElevatedAccess",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IElevatedAccess>;
    getContractAt(
      name: "IBaseSacrifice",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBaseSacrifice>;
    getContractAt(
      name: "IPartnerSacrifice",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPartnerSacrifice>;
    getContractAt(
      name: "ISacrifice",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISacrifice>;
    getContractAt(
      name: "IERC721A",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721A>;
    getContractAt(
      name: "INexusCommon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INexusCommon>;
    getContractAt(
      name: "IRelic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRelic>;
    getContractAt(
      name: "IShard",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IShard>;
    getContractAt(
      name: "ITempleSacrifice",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITempleSacrifice>;
    getContractAt(
      name: "ElevatedAccess",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ElevatedAccess>;
    getContractAt(
      name: "BaseSacrifice",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseSacrifice>;
    getContractAt(
      name: "ERC721A__IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721A__IERC721Receiver>;
    getContractAt(
      name: "ERC721ACustom",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721ACustom>;
    getContractAt(
      name: "NexusCommon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NexusCommon>;
    getContractAt(
      name: "PartnerZeroSacrifice",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PartnerZeroSacrifice>;
    getContractAt(
      name: "Relic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Relic>;
    getContractAt(
      name: "Shard",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Shard>;
    getContractAt(
      name: "TempleSacrifice",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TempleSacrifice>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
